// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// poet_Khat
arma::rowvec poet_Khat(arma::mat Y, int kmax);
RcppExport SEXP _poetREV_poet_Khat(SEXP YSEXP, SEXP kmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type kmax(kmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(poet_Khat(Y, kmax));
    return rcpp_result_gen;
END_RCPP
}
// poet
List poet(arma::mat Y, Nullable<NumericVector> K, double C, std::string thres, std::string matrix);
RcppExport SEXP _poetREV_poet(SEXP YSEXP, SEXP KSEXP, SEXP CSEXP, SEXP thresSEXP, SEXP matrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< std::string >::type thres(thresSEXP);
    Rcpp::traits::input_parameter< std::string >::type matrix(matrixSEXP);
    rcpp_result_gen = Rcpp::wrap(poet(Y, K, C, thres, matrix));
    return rcpp_result_gen;
END_RCPP
}
// cv_poet
List cv_poet(arma::mat Y, arma::vec K_seq, arma::vec C_seq, std::string thres, std::string matrix, int kfolds);
RcppExport SEXP _poetREV_cv_poet(SEXP YSEXP, SEXP K_seqSEXP, SEXP C_seqSEXP, SEXP thresSEXP, SEXP matrixSEXP, SEXP kfoldsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type K_seq(K_seqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type C_seq(C_seqSEXP);
    Rcpp::traits::input_parameter< std::string >::type thres(thresSEXP);
    Rcpp::traits::input_parameter< std::string >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< int >::type kfolds(kfoldsSEXP);
    rcpp_result_gen = Rcpp::wrap(cv_poet(Y, K_seq, C_seq, thres, matrix, kfolds));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_poetREV_poet_Khat", (DL_FUNC) &_poetREV_poet_Khat, 2},
    {"_poetREV_poet", (DL_FUNC) &_poetREV_poet, 5},
    {"_poetREV_cv_poet", (DL_FUNC) &_poetREV_cv_poet, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_poetREV(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
